{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","eyes","current","total","ears","mouth","nose","clothes","dressupState","setDressupState","updateDressUp","item","new_current","className","id","Object","keys","map","type","value","onClick","next_num","next","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA6DeA,MA1Df,WAAe,MAG2BC,mBAAS,CAC/CC,KAAM,CAACC,QAAS,EAAGC,MAAO,GAC1BC,KAAM,CAACF,QAAS,EAAGC,MAAO,GAC1BE,MAAO,CAACH,QAAS,EAAGC,MAAO,GAC3BG,KAAM,CAACJ,QAAS,EAAGC,MAAO,GAC1BI,QAAS,CAACL,QAAS,EAAGC,MAAO,KARlB,mBAGNK,EAHM,KAGQC,EAHR,KAkBb,SAASC,EAAcC,EAAKC,GAC1BH,EAAgB,2BACXD,GADU,kBAEZG,EAAO,CACNT,QAASM,EAAaG,GAAMT,QAAUU,EACtCT,MAAOK,EAAaG,GAAMR,UAYhC,OACE,sBAAKU,UAAU,MAAf,UACE,qBAAKC,GAAG,YAAR,SACE,sBAAKA,GAAG,aAAR,UACI,qBAAKA,GAAG,SACNC,OAAOC,KAAKR,GAAcS,KAAI,SAACN,GAAD,OAC5B,qBAAKG,GAAIH,EAAME,UAAWF,GAAMH,EAAaG,GAAMT,QAAQ,IAASS,WAM5EI,OAAOC,KAAKR,GAAcS,KAAI,SAACN,GAAD,OAC5B,uBAAOO,KAAK,SAASC,MAAO,QAAQR,EAAiBG,GAAI,OAAOH,EAAMS,QAAS,kBArCvF,SAAcT,GACZ,IAAIU,EAAWb,EAAaG,GAAMT,QAAU,EAG5CQ,EAAcC,EADIU,EAAWb,EAAaG,GAAMR,MAAQkB,EAAW,GAkCwBC,CAAKX,KAA3CA,MAInD,uBAAOO,KAAK,SAASC,MAAM,YAAYL,GAAG,YAAYM,QAAS,WAtBjEL,OAAOC,KAAKR,GAAcS,KAAI,SAACN,GAAD,OAC5BD,EAAcC,EAAMY,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMhB,EAAaG,GAAMR,mBCtBpEuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7959782b.chunk.js","sourcesContent":["import './assets/scss/style.scss';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  // ATM you need to manually add new items and update the total values per item \n  const [dressupState, setDressupState] = useState({\n    eyes: {current: 0, total: 9},\n    ears: {current: 0, total: 3},\n    mouth: {current: 0, total: 4},\n    nose: {current: 0, total: 3},\n    clothes: {current: 0, total: 3},  \n  });\n\n  function next(item){\n    let next_num = dressupState[item].current + 1\n    // if next_num exceeds total, restart (set current to 0)\n    let new_current = next_num < dressupState[item].total ? next_num : 0\n    updateDressUp(item, new_current)\n  }\n\n  function updateDressUp(item,new_current){\n    setDressupState({\n      ...dressupState,\n      [item]: {\n        current: dressupState[item].current = new_current, \n        total: dressupState[item].total\n      }\n    })\n  }\n\n  function randomize(){\n    // for each dressup item, generate a random integer and assign it to current \n    Object.keys(dressupState).map((item) => \n      updateDressUp(item, Math.floor(Math.random() * Math.floor(dressupState[item].total)))\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"container\">\n        <div id=\"background\">\n            <div id=\"body\"></div>\n            { Object.keys(dressupState).map((item) => \n                <div id={item} className={item+(dressupState[item].current+1)} key={item}></div>\n              )\n            } \n        </div>\n      </div>\n\n      { Object.keys(dressupState).map((item) => \n          <input type=\"button\" value={\"next \"+item} key={item} id={\"next\"+item} onClick={() => next(item)}/>\n        )\n      }\n\n      <input type=\"button\" value=\"RANDOMIZE\" id=\"randomize\" onClick={() => randomize()}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}